//
//  DECGOverviewViewController.swift
//  CorpulsKit Reference App
//
//  Created by Markus BÃ¶sch on 03.11.21.
//

import Foundation
import UIKit
import CorpulsKit

final class DECGOverviewViewController: TableViewController {
    // MARK: - Variables

    let decgIndices: [DECGIndex]
    let loadingSpinner = UIActivityIndicatorView(style: .medium)

    // MARK: - Initialization

    init(decgIndices: [DECGIndex]) {
        self.decgIndices = decgIndices.reversed()

        super.init(style: .insetGrouped)

        self.navigationItem.rightBarButtonItem = UIBarButtonItem(customView: loadingSpinner)

        title = "DECGs"
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: - UIViewController

    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)

        if decgIndices.isEmpty {
            presentAlert(title: "Data unavailable", message: "No DECGs were created yet for the current mission") { _ in
                self.navigationController?.popViewController(animated: true)
            }
        }
    }

    // MARK: - UITableViewDataSource

    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return decgIndices.count
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = UITableViewCell(style: .value1, reuseIdentifier: nil)

        let decgIndex = decgIndices[indexPath.row]

        cell.textLabel?.text = String(decgIndex.index)
        cell.detailTextLabel?.text = DateFormatter.default.string(from: decgIndex.date)

        return cell
    }

    // MARK: - UITableViewDelegate

    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)

        let decgIndex = decgIndices[indexPath.row]
        requestDECG(at: decgIndex)
    }

    // MARK: - BLE

    private func requestDECG(at decgIndex: DECGIndex) {
        navigationItem.rightBarButtonItem = UIBarButtonItem(customView: loadingSpinner)
        loadingSpinner.startAnimating()

        CorpulsBLE.shared.requestDECG(by: .index(decgIndex.index)) { progress in
            let percent = lround(progress * 100)
            self.updateProgressLabel(with: "\(percent) %")
        } completion: {
            switch $0 {
            case .success(let decgData):
                self.updateProgressLabel(with: "")

                let decgReportViewController = DECGReportViewController(decg: decgData)
                self.navigationController?.pushViewController(decgReportViewController, animated: true)
            case .failure(let error):
                self.loadingSpinner.stopAnimating()
                self.presentError(error)
            }
        }

        DispatchQueue.main.asyncAfter(deadline: .now() + 2) {
            self.updateProgressLabel(with: "Preparing DECG ...")
        }
    }

    private func updateProgressLabel(with text: String) {
        loadingSpinner.stopAnimating()

        navigationItem.rightBarButtonItem = UIBarButtonItem(title: text, style: .plain, target: nil, action: nil)

        if text.contains("%") {
            navigationItem.rightBarButtonItem?.setTitleTextAttributes([.font: UIFont.monospacedSystemFont(ofSize: 17, weight: .regular)], for: .normal)
        }
    }
}
