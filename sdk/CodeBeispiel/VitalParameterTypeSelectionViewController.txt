//
//  VitalParameterTypeSelectionViewController.swift
//  CorpulsKit Reference App
//
//  Created by Markus BÃ¶sch on 28.02.22.
//

import UIKit
import CorpulsKit

protocol VitalParameterTypeSelectionViewControllerDelegate: AnyObject {
    func didSelectVitalParameterType(_ vitalParameterType: VitalParameterType)
}

class VitalParameterTypeSelectionViewController: TableViewController {
    // MARK: - Properties
    private let types = VitalParameterType.allCases
    private let selectedType: VitalParameterType

    private let reuseIdentifier = "VitalParameterTypeCell"

    weak var delegate: VitalParameterTypeSelectionViewControllerDelegate?

    private var didPerformInitialScroll = false

    // MARK: - Initialization

    init(selectedType: VitalParameterType) {
        self.selectedType = selectedType

        super.init(style: .plain)
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: - UIViewController

    override func viewDidLoad() {
        super.viewDidLoad()

        title = "Select type"

        tableView.register(UITableViewCell.self, forCellReuseIdentifier: reuseIdentifier)
    }

    // MARK: - UITableViewDataSource

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return types.count
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: reuseIdentifier, for: indexPath)

        let type = type(at: indexPath)
        let isSelected = type == selectedType

        cell.textLabel?.text = type.string
        cell.accessoryType = isSelected ? .checkmark : .none

        return cell
    }

    override func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        if !didPerformInitialScroll {
            didPerformInitialScroll = true
            scrollToStartRow()
        }
    }

    // MARK: - UITableViewDelegate

    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let type = type(at: indexPath)

        delegate?.didSelectVitalParameterType(type)

        dismiss(animated: true, completion: nil)
    }

    // MARK: - Private

    private func type(at indexPath: IndexPath) -> VitalParameterType {
        return types[indexPath.row]
    }

    private func scrollToStartRow() {
        guard let index = types.firstIndex(of: selectedType) else { return }

        tableView.scrollToRow(at: IndexPath(row: index, section: 0), at: .none, animated: true)
    }
}
